
USART - Demo Read.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000cfc  00000d90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cfc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021a  0080017a  0080017a  00000e0a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032f4  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001123  00000000  00000000  00004330  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eae  00000000  00000000  00005453  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000063c  00000000  00000000  00006304  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b08  00000000  00000000  00006940  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a31  00000000  00000000  00007448  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00008e79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__dtors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_16>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__vector_18>
  4c:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__vector_19>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000b4 <__ctors_start>:
  b4:	8a 03       	fmulsu	r16, r18

000000b6 <__ctors_end>:
  b6:	91 03       	fmuls	r17, r17

000000b8 <__dtors_end>:
  b8:	11 24       	eor	r1, r1
  ba:	1f be       	out	0x3f, r1	; 63
  bc:	cf ef       	ldi	r28, 0xFF	; 255
  be:	d8 e0       	ldi	r29, 0x08	; 8
  c0:	de bf       	out	0x3e, r29	; 62
  c2:	cd bf       	out	0x3d, r28	; 61

000000c4 <__do_copy_data>:
  c4:	11 e0       	ldi	r17, 0x01	; 1
  c6:	a0 e0       	ldi	r26, 0x00	; 0
  c8:	b1 e0       	ldi	r27, 0x01	; 1
  ca:	ec ef       	ldi	r30, 0xFC	; 252
  cc:	fc e0       	ldi	r31, 0x0C	; 12
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <__do_copy_data+0x10>
  d0:	05 90       	lpm	r0, Z+
  d2:	0d 92       	st	X+, r0
  d4:	aa 37       	cpi	r26, 0x7A	; 122
  d6:	b1 07       	cpc	r27, r17
  d8:	d9 f7       	brne	.-10     	; 0xd0 <__do_copy_data+0xc>

000000da <__do_clear_bss>:
  da:	23 e0       	ldi	r18, 0x03	; 3
  dc:	aa e7       	ldi	r26, 0x7A	; 122
  de:	b1 e0       	ldi	r27, 0x01	; 1
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <.do_clear_bss_start>

000000e2 <.do_clear_bss_loop>:
  e2:	1d 92       	st	X+, r1

000000e4 <.do_clear_bss_start>:
  e4:	a4 39       	cpi	r26, 0x94	; 148
  e6:	b2 07       	cpc	r27, r18
  e8:	e1 f7       	brne	.-8      	; 0xe2 <.do_clear_bss_loop>

000000ea <__do_global_ctors>:
  ea:	10 e0       	ldi	r17, 0x00	; 0
  ec:	cb e5       	ldi	r28, 0x5B	; 91
  ee:	d0 e0       	ldi	r29, 0x00	; 0
  f0:	04 c0       	rjmp	.+8      	; 0xfa <__do_global_ctors+0x10>
  f2:	21 97       	sbiw	r28, 0x01	; 1
  f4:	fe 01       	movw	r30, r28
  f6:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__tablejump2__>
  fa:	ca 35       	cpi	r28, 0x5A	; 90
  fc:	d1 07       	cpc	r29, r17
  fe:	c9 f7       	brne	.-14     	; 0xf2 <__do_global_ctors+0x8>
 100:	0e 94 98 03 	call	0x730	; 0x730 <main>
 104:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__do_global_dtors>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <_ZN8__Time__5beginEv>:
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    __asm__ volatile ("" ::: "memory");
 10c:	fc 01       	movw	r30, r24
 10e:	20 81       	ld	r18, Z
 110:	21 11       	cpse	r18, r1
 112:	14 c0       	rjmp	.+40     	; 0x13c <_ZN8__Time__5beginEv+0x30>
 114:	21 e0       	ldi	r18, 0x01	; 1
 116:	20 83       	st	Z, r18
 118:	f8 94       	cli
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	88 23       	and	r24, r24
 11e:	69 f0       	breq	.+26     	; 0x13a <_ZN8__Time__5beginEv+0x2e>
 120:	85 b5       	in	r24, 0x25	; 37
 122:	8a 7f       	andi	r24, 0xFA	; 250
 124:	85 bd       	out	0x25, r24	; 37
 126:	85 b5       	in	r24, 0x25	; 37
 128:	82 60       	ori	r24, 0x02	; 2
 12a:	85 bd       	out	0x25, r24	; 37
 12c:	ee e6       	ldi	r30, 0x6E	; 110
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	81 60       	ori	r24, 0x01	; 1
 134:	80 83       	st	Z, r24
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	f1 cf       	rjmp	.-30     	; 0x11c <_ZN8__Time__5beginEv+0x10>
 13a:	78 94       	sei
 13c:	08 95       	ret

0000013e <_ZN8__Time__12microsecondsEv>:
 13e:	fc 01       	movw	r30, r24
 140:	8f b7       	in	r24, 0x3f	; 63
 142:	f8 94       	cli
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	99 23       	and	r25, r25
 148:	31 f0       	breq	.+12     	; 0x156 <_ZN8__Time__12microsecondsEv+0x18>
 14a:	41 81       	ldd	r20, Z+1	; 0x01
 14c:	52 81       	ldd	r21, Z+2	; 0x02
 14e:	63 81       	ldd	r22, Z+3	; 0x03
 150:	74 81       	ldd	r23, Z+4	; 0x04
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	f8 cf       	rjmp	.-16     	; 0x146 <_ZN8__Time__12microsecondsEv+0x8>
 156:	8f bf       	out	0x3f, r24	; 63
 158:	cb 01       	movw	r24, r22
 15a:	ba 01       	movw	r22, r20
 15c:	08 95       	ret

0000015e <_ZN8__Time__12millisecondsEv>:
 15e:	0e 94 9f 00 	call	0x13e	; 0x13e <_ZN8__Time__12microsecondsEv>
 162:	28 ee       	ldi	r18, 0xE8	; 232
 164:	33 e0       	ldi	r19, 0x03	; 3
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	0e 94 49 06 	call	0xc92	; 0xc92 <__udivmodsi4>
 16e:	ca 01       	movw	r24, r20
 170:	b9 01       	movw	r22, r18
 172:	08 95       	ret

00000174 <_ZN8__Time__7secondsEv>:
 174:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN8__Time__12millisecondsEv>
 178:	28 ee       	ldi	r18, 0xE8	; 232
 17a:	33 e0       	ldi	r19, 0x03	; 3
 17c:	40 e0       	ldi	r20, 0x00	; 0
 17e:	50 e0       	ldi	r21, 0x00	; 0
 180:	0e 94 49 06 	call	0xc92	; 0xc92 <__udivmodsi4>
 184:	ca 01       	movw	r24, r20
 186:	b9 01       	movw	r22, r18
 188:	08 95       	ret

0000018a <_ZN8__Time__5delayEm>:
 18a:	8f 92       	push	r8
 18c:	9f 92       	push	r9
 18e:	af 92       	push	r10
 190:	bf 92       	push	r11
 192:	cf 92       	push	r12
 194:	df 92       	push	r13
 196:	ef 92       	push	r14
 198:	ff 92       	push	r15
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	ec 01       	movw	r28, r24
 1a0:	4a 01       	movw	r8, r20
 1a2:	5b 01       	movw	r10, r22
 1a4:	0e 94 ba 00 	call	0x174	; 0x174 <_ZN8__Time__7secondsEv>
 1a8:	6b 01       	movw	r12, r22
 1aa:	7c 01       	movw	r14, r24
 1ac:	ce 01       	movw	r24, r28
 1ae:	0e 94 ba 00 	call	0x174	; 0x174 <_ZN8__Time__7secondsEv>
 1b2:	dc 01       	movw	r26, r24
 1b4:	cb 01       	movw	r24, r22
 1b6:	8c 19       	sub	r24, r12
 1b8:	9d 09       	sbc	r25, r13
 1ba:	ae 09       	sbc	r26, r14
 1bc:	bf 09       	sbc	r27, r15
 1be:	88 15       	cp	r24, r8
 1c0:	99 05       	cpc	r25, r9
 1c2:	aa 05       	cpc	r26, r10
 1c4:	bb 05       	cpc	r27, r11
 1c6:	90 f3       	brcs	.-28     	; 0x1ac <_ZN8__Time__5delayEm+0x22>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	ff 90       	pop	r15
 1ce:	ef 90       	pop	r14
 1d0:	df 90       	pop	r13
 1d2:	cf 90       	pop	r12
 1d4:	bf 90       	pop	r11
 1d6:	af 90       	pop	r10
 1d8:	9f 90       	pop	r9
 1da:	8f 90       	pop	r8
 1dc:	08 95       	ret

000001de <_ZN8__Time__3irqEv>:
    }
}

void __Time__::irq(void)
{
    this->counter = (this->counter + TIME_INCREMENT_VALUE);
 1de:	fc 01       	movw	r30, r24
 1e0:	41 81       	ldd	r20, Z+1	; 0x01
 1e2:	52 81       	ldd	r21, Z+2	; 0x02
 1e4:	63 81       	ldd	r22, Z+3	; 0x03
 1e6:	74 81       	ldd	r23, Z+4	; 0x04
 1e8:	40 58       	subi	r20, 0x80	; 128
 1ea:	5f 4f       	sbci	r21, 0xFF	; 255
 1ec:	6f 4f       	sbci	r22, 0xFF	; 255
 1ee:	7f 4f       	sbci	r23, 0xFF	; 255
 1f0:	41 83       	std	Z+1, r20	; 0x01
 1f2:	52 83       	std	Z+2, r21	; 0x02
 1f4:	63 83       	std	Z+3, r22	; 0x03
 1f6:	74 83       	std	Z+4, r23	; 0x04
 1f8:	08 95       	ret

000001fa <__vector_16>:
Purpose:  Handling interrupts of Timer COMPA
Input:    Interrupt vector
Return:   None
************************/
ISR(TIMER0_OVF_vect)
{
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
    Time.irq();
 21c:	8a e7       	ldi	r24, 0x7A	; 122
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 ef 00 	call	0x1de	; 0x1de <_ZN8__Time__3irqEv>
}
 224:	ff 91       	pop	r31
 226:	ef 91       	pop	r30
 228:	bf 91       	pop	r27
 22a:	af 91       	pop	r26
 22c:	9f 91       	pop	r25
 22e:	8f 91       	pop	r24
 230:	7f 91       	pop	r23
 232:	6f 91       	pop	r22
 234:	5f 91       	pop	r21
 236:	4f 91       	pop	r20
 238:	3f 91       	pop	r19
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <_ZN9__USART__C1EPVhS1_S1_S1_S1_S1_>:
    /* Disable <RX>, <RX-IRQ>, <TX> */
    #if defined(__AVR_ATmega328P__) || \
        defined(__AVR_ATmega328PB__) || \
        defined(__AVR_ATmega2560__)
    /* Enable TX interrupt */
    *(this->ucsrb) = *(this->ucsrb)  & ~((1 << RXEN0) | (1 << RXCIE0) | (1 << TXEN0));
 246:	cf 92       	push	r12
 248:	df 92       	push	r13
 24a:	ef 92       	push	r14
 24c:	ff 92       	push	r15
 24e:	0f 93       	push	r16
 250:	1f 93       	push	r17
 252:	fc 01       	movw	r30, r24
 254:	72 83       	std	Z+2, r23	; 0x02
 256:	61 83       	std	Z+1, r22	; 0x01
 258:	54 83       	std	Z+4, r21	; 0x04
 25a:	43 83       	std	Z+3, r20	; 0x03
 25c:	36 83       	std	Z+6, r19	; 0x06
 25e:	25 83       	std	Z+5, r18	; 0x05
 260:	10 87       	std	Z+8, r17	; 0x08
 262:	07 83       	std	Z+7, r16	; 0x07
 264:	f2 86       	std	Z+10, r15	; 0x0a
 266:	e1 86       	std	Z+9, r14	; 0x09
 268:	d4 86       	std	Z+12, r13	; 0x0c
 26a:	c3 86       	std	Z+11, r12	; 0x0b
 26c:	1f 91       	pop	r17
 26e:	0f 91       	pop	r16
 270:	ff 90       	pop	r15
 272:	ef 90       	pop	r14
 274:	df 90       	pop	r13
 276:	cf 90       	pop	r12
 278:	08 95       	ret

0000027a <_ZN9__USART__D1Ev>:
 27a:	fc 01       	movw	r30, r24
 27c:	12 82       	std	Z+2, r1	; 0x02
 27e:	11 82       	std	Z+1, r1	; 0x01
 280:	14 82       	std	Z+4, r1	; 0x04
 282:	13 82       	std	Z+3, r1	; 0x03
 284:	16 82       	std	Z+6, r1	; 0x06
 286:	15 82       	std	Z+5, r1	; 0x05
 288:	10 86       	std	Z+8, r1	; 0x08
 28a:	17 82       	std	Z+7, r1	; 0x07
 28c:	12 86       	std	Z+10, r1	; 0x0a
 28e:	11 86       	std	Z+9, r1	; 0x09
 290:	14 86       	std	Z+12, r1	; 0x0c
 292:	13 86       	std	Z+11, r1	; 0x0b
 294:	08 95       	ret

00000296 <_ZN9__USART__5beginEm>:
 296:	0f 93       	push	r16
 298:	1f 93       	push	r17
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	fc 01       	movw	r30, r24
 2a0:	20 81       	ld	r18, Z
 2a2:	21 11       	cpse	r18, r1
 2a4:	3c c0       	rjmp	.+120    	; 0x31e <_ZN9__USART__5beginEm+0x88>
 2a6:	ec 01       	movw	r28, r24
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	80 83       	st	Z, r24
 2ac:	cb 01       	movw	r24, r22
 2ae:	ba 01       	movw	r22, r20
 2b0:	0e 94 01 05 	call	0xa02	; 0xa02 <__floatunsisf>
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	40 e8       	ldi	r20, 0x80	; 128
 2ba:	51 e4       	ldi	r21, 0x41	; 65
 2bc:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__mulsf3>
 2c0:	9b 01       	movw	r18, r22
 2c2:	ac 01       	movw	r20, r24
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	74 e2       	ldi	r23, 0x24	; 36
 2c8:	84 e7       	ldi	r24, 0x74	; 116
 2ca:	9b e4       	ldi	r25, 0x4B	; 75
 2cc:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__divsf3>
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	40 e8       	ldi	r20, 0x80	; 128
 2d6:	5f e3       	ldi	r21, 0x3F	; 63
 2d8:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__subsf3>
 2dc:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <round>
 2e0:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixunssfsi>
 2e4:	06 2f       	mov	r16, r22
 2e6:	17 2f       	mov	r17, r23
 2e8:	8a e7       	ldi	r24, 0x7A	; 122
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	0e 94 86 00 	call	0x10c	; 0x10c <_ZN8__Time__5beginEv>
 2f0:	f8 94       	cli
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	88 23       	and	r24, r24
 2f6:	91 f0       	breq	.+36     	; 0x31c <_ZN9__USART__5beginEm+0x86>
 2f8:	e9 81       	ldd	r30, Y+1	; 0x01
 2fa:	fa 81       	ldd	r31, Y+2	; 0x02
 2fc:	10 83       	st	Z, r17
 2fe:	eb 81       	ldd	r30, Y+3	; 0x03
 300:	fc 81       	ldd	r31, Y+4	; 0x04
 302:	00 83       	st	Z, r16
 304:	e9 85       	ldd	r30, Y+9	; 0x09
 306:	fa 85       	ldd	r31, Y+10	; 0x0a
 308:	80 81       	ld	r24, Z
 30a:	86 60       	ori	r24, 0x06	; 6
 30c:	80 83       	st	Z, r24
 30e:	ef 81       	ldd	r30, Y+7	; 0x07
 310:	f8 85       	ldd	r31, Y+8	; 0x08
 312:	80 81       	ld	r24, Z
 314:	88 69       	ori	r24, 0x98	; 152
 316:	80 83       	st	Z, r24
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	ec cf       	rjmp	.-40     	; 0x2f4 <_ZN9__USART__5beginEm+0x5e>
 31c:	78 94       	sei
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	08 95       	ret

00000328 <_ZN9__USART__9availableEv>:
 328:	9c 01       	movw	r18, r24
 32a:	4f b7       	in	r20, 0x3f	; 63
 32c:	f8 94       	cli
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	99 23       	and	r25, r25
 334:	49 f0       	breq	.+18     	; 0x348 <_ZN9__USART__9availableEv+0x20>
 336:	f9 01       	movw	r30, r18
 338:	e3 5f       	subi	r30, 0xF3	; 243
 33a:	fd 4f       	sbci	r31, 0xFD	; 253
 33c:	80 81       	ld	r24, Z
 33e:	31 96       	adiw	r30, 0x01	; 1
 340:	90 81       	ld	r25, Z
 342:	89 1b       	sub	r24, r25
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	f5 cf       	rjmp	.-22     	; 0x332 <_ZN9__USART__9availableEv+0xa>
 348:	4f bf       	out	0x3f, r20	; 63
 34a:	08 95       	ret

0000034c <_ZN9__USART__4readEv>:
 34c:	fc 01       	movw	r30, r24
 34e:	e3 5f       	subi	r30, 0xF3	; 243
 350:	fd 4f       	sbci	r31, 0xFD	; 253
 352:	30 81       	ld	r19, Z
 354:	31 96       	adiw	r30, 0x01	; 1
 356:	20 81       	ld	r18, Z
 358:	32 17       	cp	r19, r18
 35a:	51 f0       	breq	.+20     	; 0x370 <_ZN9__USART__4readEv+0x24>
 35c:	20 81       	ld	r18, Z
 35e:	dc 01       	movw	r26, r24
 360:	a2 0f       	add	r26, r18
 362:	b1 1d       	adc	r27, r1
 364:	1d 96       	adiw	r26, 0x0d	; 13
 366:	8c 91       	ld	r24, X
 368:	90 81       	ld	r25, Z
 36a:	9f 5f       	subi	r25, 0xFF	; 255
 36c:	90 83       	st	Z, r25
 36e:	08 95       	ret
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	08 95       	ret

00000374 <_ZN9__USART__4readEPhhm>:
 374:	4f 92       	push	r4
 376:	5f 92       	push	r5
 378:	6f 92       	push	r6
 37a:	7f 92       	push	r7
 37c:	8f 92       	push	r8
 37e:	9f 92       	push	r9
 380:	af 92       	push	r10
 382:	bf 92       	push	r11
 384:	cf 92       	push	r12
 386:	df 92       	push	r13
 388:	ef 92       	push	r14
 38a:	ff 92       	push	r15
 38c:	0f 93       	push	r16
 38e:	1f 93       	push	r17
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	ec 01       	movw	r28, r24
 396:	3b 01       	movw	r6, r22
 398:	54 2e       	mov	r5, r20
 39a:	68 01       	movw	r12, r16
 39c:	79 01       	movw	r14, r18
 39e:	44 23       	and	r20, r20
 3a0:	d9 f1       	breq	.+118    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3a2:	0e 94 94 01 	call	0x328	; 0x328 <_ZN9__USART__9availableEv>
 3a6:	88 23       	and	r24, r24
 3a8:	c9 f1       	breq	.+114    	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3aa:	8a e7       	ldi	r24, 0x7A	; 122
 3ac:	91 e0       	ldi	r25, 0x01	; 1
 3ae:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN8__Time__12millisecondsEv>
 3b2:	4b 01       	movw	r8, r22
 3b4:	5c 01       	movw	r10, r24
 3b6:	41 2c       	mov	r4, r1
 3b8:	55 20       	and	r5, r5
 3ba:	61 f1       	breq	.+88     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3bc:	8a e7       	ldi	r24, 0x7A	; 122
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN8__Time__12millisecondsEv>
 3c4:	dc 01       	movw	r26, r24
 3c6:	cb 01       	movw	r24, r22
 3c8:	88 19       	sub	r24, r8
 3ca:	99 09       	sbc	r25, r9
 3cc:	aa 09       	sbc	r26, r10
 3ce:	bb 09       	sbc	r27, r11
 3d0:	8c 15       	cp	r24, r12
 3d2:	9d 05       	cpc	r25, r13
 3d4:	ae 05       	cpc	r26, r14
 3d6:	bf 05       	cpc	r27, r15
 3d8:	38 f0       	brcs	.+14     	; 0x3e8 <_ZN9__USART__4readEPhhm+0x74>
 3da:	c1 14       	cp	r12, r1
 3dc:	d1 04       	cpc	r13, r1
 3de:	e1 04       	cpc	r14, r1
 3e0:	f1 04       	cpc	r15, r1
 3e2:	21 f4       	brne	.+8      	; 0x3ec <_ZN9__USART__4readEPhhm+0x78>
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	03 c0       	rjmp	.+6      	; 0x3ee <_ZN9__USART__4readEPhhm+0x7a>
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	01 c0       	rjmp	.+2      	; 0x3ee <_ZN9__USART__4readEPhhm+0x7a>
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	81 11       	cpse	r24, r1
 3f0:	17 c0       	rjmp	.+46     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3f2:	ce 01       	movw	r24, r28
 3f4:	0e 94 94 01 	call	0x328	; 0x328 <_ZN9__USART__9availableEv>
 3f8:	88 23       	and	r24, r24
 3fa:	f1 f2       	breq	.-68     	; 0x3b8 <_ZN9__USART__4readEPhhm+0x44>
 3fc:	83 01       	movw	r16, r6
 3fe:	0f 5f       	subi	r16, 0xFF	; 255
 400:	1f 4f       	sbci	r17, 0xFF	; 255
 402:	ce 01       	movw	r24, r28
 404:	0e 94 a6 01 	call	0x34c	; 0x34c <_ZN9__USART__4readEv>
 408:	f3 01       	movw	r30, r6
 40a:	80 83       	st	Z, r24
 40c:	5a 94       	dec	r5
 40e:	43 94       	inc	r4
 410:	38 01       	movw	r6, r16
 412:	d2 cf       	rjmp	.-92     	; 0x3b8 <_ZN9__USART__4readEPhhm+0x44>
 414:	84 2d       	mov	r24, r4
 416:	05 c0       	rjmp	.+10     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	03 c0       	rjmp	.+6      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	01 c0       	rjmp	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 420:	8e ef       	ldi	r24, 0xFE	; 254
 422:	df 91       	pop	r29
 424:	cf 91       	pop	r28
 426:	1f 91       	pop	r17
 428:	0f 91       	pop	r16
 42a:	ff 90       	pop	r15
 42c:	ef 90       	pop	r14
 42e:	df 90       	pop	r13
 430:	cf 90       	pop	r12
 432:	bf 90       	pop	r11
 434:	af 90       	pop	r10
 436:	9f 90       	pop	r9
 438:	8f 90       	pop	r8
 43a:	7f 90       	pop	r7
 43c:	6f 90       	pop	r6
 43e:	5f 90       	pop	r5
 440:	4f 90       	pop	r4
 442:	08 95       	ret

00000444 <_ZN9__USART__5writeEh>:
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	dc 01       	movw	r26, r24
 44a:	fc 01       	movw	r30, r24
 44c:	e1 5f       	subi	r30, 0xF1	; 241
 44e:	fd 4f       	sbci	r31, 0xFD	; 253
 450:	80 81       	ld	r24, Z
 452:	8f 5f       	subi	r24, 0xFF	; 255
 454:	fd 01       	movw	r30, r26
 456:	e0 5f       	subi	r30, 0xF0	; 240
 458:	fd 4f       	sbci	r31, 0xFD	; 253
 45a:	90 81       	ld	r25, Z
 45c:	89 17       	cp	r24, r25
 45e:	d1 f3       	breq	.-12     	; 0x454 <_ZN9__USART__5writeEh+0x10>
 460:	ed 01       	movw	r28, r26
 462:	c1 5f       	subi	r28, 0xF1	; 241
 464:	dd 4f       	sbci	r29, 0xFD	; 253
 466:	98 81       	ld	r25, Y
 468:	fd 01       	movw	r30, r26
 46a:	e9 0f       	add	r30, r25
 46c:	f1 1d       	adc	r31, r1
 46e:	e3 5f       	subi	r30, 0xF3	; 243
 470:	fe 4f       	sbci	r31, 0xFE	; 254
 472:	60 83       	st	Z, r22
 474:	88 83       	st	Y, r24
 476:	17 96       	adiw	r26, 0x07	; 7
 478:	ed 91       	ld	r30, X+
 47a:	fc 91       	ld	r31, X
 47c:	18 97       	sbiw	r26, 0x08	; 8
 47e:	80 81       	ld	r24, Z
 480:	80 62       	ori	r24, 0x20	; 32
 482:	80 83       	st	Z, r24
 484:	df 91       	pop	r29
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <_ZN9__USART__5writeEPKhh>:
 48a:	cf 92       	push	r12
 48c:	df 92       	push	r13
 48e:	ff 92       	push	r15
 490:	0f 93       	push	r16
 492:	1f 93       	push	r17
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	6c 01       	movw	r12, r24
 49a:	8b 01       	movw	r16, r22
 49c:	f4 2e       	mov	r15, r20
 49e:	eb 01       	movw	r28, r22
 4a0:	c8 01       	movw	r24, r16
 4a2:	8f 0d       	add	r24, r15
 4a4:	91 1d       	adc	r25, r1
 4a6:	c8 17       	cp	r28, r24
 4a8:	d9 07       	cpc	r29, r25
 4aa:	28 f4       	brcc	.+10     	; 0x4b6 <_ZN9__USART__5writeEPKhh+0x2c>
 4ac:	69 91       	ld	r22, Y+
 4ae:	c6 01       	movw	r24, r12
 4b0:	0e 94 22 02 	call	0x444	; 0x444 <_ZN9__USART__5writeEh>
 4b4:	f5 cf       	rjmp	.-22     	; 0x4a0 <_ZN9__USART__5writeEPKhh+0x16>
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	1f 91       	pop	r17
 4bc:	0f 91       	pop	r16
 4be:	ff 90       	pop	r15
 4c0:	df 90       	pop	r13
 4c2:	cf 90       	pop	r12
 4c4:	08 95       	ret

000004c6 <_ZN9__USART__5printEc>:
 4c6:	0e 94 22 02 	call	0x444	; 0x444 <_ZN9__USART__5writeEh>
 4ca:	08 95       	ret

000004cc <_ZN9__USART__7printlnEv>:
 4cc:	6a e0       	ldi	r22, 0x0A	; 10
 4ce:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN9__USART__5printEc>
 4d2:	08 95       	ret

000004d4 <_ZN9__USART__5printEPKc>:
 4d4:	0f 93       	push	r16
 4d6:	1f 93       	push	r17
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	8c 01       	movw	r16, r24
 4de:	eb 01       	movw	r28, r22
 4e0:	68 81       	ld	r22, Y
 4e2:	66 23       	and	r22, r22
 4e4:	29 f0       	breq	.+10     	; 0x4f0 <_ZN9__USART__5printEPKc+0x1c>
 4e6:	21 96       	adiw	r28, 0x01	; 1
 4e8:	c8 01       	movw	r24, r16
 4ea:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN9__USART__5printEc>
 4ee:	f8 cf       	rjmp	.-16     	; 0x4e0 <_ZN9__USART__5printEPKc+0xc>
 4f0:	df 91       	pop	r29
 4f2:	cf 91       	pop	r28
 4f4:	1f 91       	pop	r17
 4f6:	0f 91       	pop	r16
 4f8:	08 95       	ret

000004fa <_ZN9__USART__5printEh>:
 4fa:	0f 93       	push	r16
 4fc:	1f 93       	push	r17
 4fe:	cf 93       	push	r28
 500:	8c 01       	movw	r16, r24
 502:	c6 2f       	mov	r28, r22
 504:	64 36       	cpi	r22, 0x64	; 100
 506:	48 f0       	brcs	.+18     	; 0x51a <_ZN9__USART__5printEh+0x20>
 508:	69 e2       	ldi	r22, 0x29	; 41
 50a:	c6 9f       	mul	r28, r22
 50c:	61 2d       	mov	r22, r1
 50e:	11 24       	eor	r1, r1
 510:	62 95       	swap	r22
 512:	6f 70       	andi	r22, 0x0F	; 15
 514:	60 5d       	subi	r22, 0xD0	; 208
 516:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN9__USART__5printEc>
 51a:	ca 30       	cpi	r28, 0x0A	; 10
 51c:	b8 f0       	brcs	.+46     	; 0x54c <_ZN9__USART__5printEh+0x52>
 51e:	8d ec       	ldi	r24, 0xCD	; 205
 520:	c8 9f       	mul	r28, r24
 522:	61 2d       	mov	r22, r1
 524:	11 24       	eor	r1, r1
 526:	66 95       	lsr	r22
 528:	66 95       	lsr	r22
 52a:	66 95       	lsr	r22
 52c:	68 9f       	mul	r22, r24
 52e:	81 2d       	mov	r24, r1
 530:	11 24       	eor	r1, r1
 532:	86 95       	lsr	r24
 534:	86 95       	lsr	r24
 536:	86 95       	lsr	r24
 538:	88 0f       	add	r24, r24
 53a:	98 2f       	mov	r25, r24
 53c:	99 0f       	add	r25, r25
 53e:	99 0f       	add	r25, r25
 540:	89 0f       	add	r24, r25
 542:	68 1b       	sub	r22, r24
 544:	60 5d       	subi	r22, 0xD0	; 208
 546:	c8 01       	movw	r24, r16
 548:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN9__USART__5printEc>
 54c:	8d ec       	ldi	r24, 0xCD	; 205
 54e:	c8 9f       	mul	r28, r24
 550:	81 2d       	mov	r24, r1
 552:	11 24       	eor	r1, r1
 554:	86 95       	lsr	r24
 556:	86 95       	lsr	r24
 558:	86 95       	lsr	r24
 55a:	88 0f       	add	r24, r24
 55c:	98 2f       	mov	r25, r24
 55e:	99 0f       	add	r25, r25
 560:	99 0f       	add	r25, r25
 562:	89 0f       	add	r24, r25
 564:	6c 2f       	mov	r22, r28
 566:	68 1b       	sub	r22, r24
 568:	60 5d       	subi	r22, 0xD0	; 208
 56a:	c8 01       	movw	r24, r16
 56c:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN9__USART__5printEc>
 570:	cf 91       	pop	r28
 572:	1f 91       	pop	r17
 574:	0f 91       	pop	r16
 576:	08 95       	ret

00000578 <_ZN9__USART__7printlnEh>:
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	ec 01       	movw	r28, r24
 57e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_ZN9__USART__5printEh>
 582:	ce 01       	movw	r24, r28
 584:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN9__USART__7printlnEv>
 588:	df 91       	pop	r29
 58a:	cf 91       	pop	r28
 58c:	08 95       	ret

0000058e <_ZN9__USART__5rxIRQEv>:
Purpose:  RX interrupt call
Input:    None
Return:   None
***************************************************/
void __USART__::rxIRQ(void)
{
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
    /* Read data into buffer */
    this->rxBuffer[this->rxHead] = *(this->udr);
 592:	fc 01       	movw	r30, r24
 594:	e3 5f       	subi	r30, 0xF3	; 243
 596:	fd 4f       	sbci	r31, 0xFD	; 253
 598:	30 81       	ld	r19, Z
 59a:	ec 01       	movw	r28, r24
 59c:	ab 85       	ldd	r26, Y+11	; 0x0b
 59e:	bc 85       	ldd	r27, Y+12	; 0x0c
 5a0:	2c 91       	ld	r18, X
 5a2:	dc 01       	movw	r26, r24
 5a4:	a3 0f       	add	r26, r19
 5a6:	b1 1d       	adc	r27, r1
 5a8:	1d 96       	adiw	r26, 0x0d	; 13
 5aa:	2c 93       	st	X, r18
    /* Increase head */
    this->rxHead = (this->rxHead + 1) & USART_DEFAULT_RX_BUFFER_MASK;
 5ac:	80 81       	ld	r24, Z
 5ae:	8f 5f       	subi	r24, 0xFF	; 255
 5b0:	80 83       	st	Z, r24
}
 5b2:	df 91       	pop	r29
 5b4:	cf 91       	pop	r28
 5b6:	08 95       	ret

000005b8 <_ZN9__USART__5txIRQEv>:
Purpose:  TX interrupt call
Input:    None
Return:   None
***************************************************/
void __USART__::txIRQ(void)
{
 5b8:	cf 93       	push	r28
 5ba:	df 93       	push	r29
    /* If data is available into buffer */
    if (this->txHead != this->txTail)
 5bc:	fc 01       	movw	r30, r24
 5be:	e1 5f       	subi	r30, 0xF1	; 241
 5c0:	fd 4f       	sbci	r31, 0xFD	; 253
 5c2:	30 81       	ld	r19, Z
 5c4:	31 96       	adiw	r30, 0x01	; 1
 5c6:	20 81       	ld	r18, Z
 5c8:	32 17       	cp	r19, r18
 5ca:	91 f0       	breq	.+36     	; 0x5f0 <_ZN9__USART__5txIRQEv+0x38>
    {
        /* Load data from buffer */
        *(this->udr) = this->txBuffer[this->txTail];
 5cc:	dc 01       	movw	r26, r24
 5ce:	1b 96       	adiw	r26, 0x0b	; 11
 5d0:	cd 91       	ld	r28, X+
 5d2:	dc 91       	ld	r29, X
 5d4:	1c 97       	sbiw	r26, 0x0c	; 12
 5d6:	df 01       	movw	r26, r30
 5d8:	20 81       	ld	r18, Z
 5da:	82 0f       	add	r24, r18
 5dc:	91 1d       	adc	r25, r1
 5de:	fc 01       	movw	r30, r24
 5e0:	e3 5f       	subi	r30, 0xF3	; 243
 5e2:	fe 4f       	sbci	r31, 0xFE	; 254
 5e4:	80 81       	ld	r24, Z
 5e6:	88 83       	st	Y, r24
        /* Increase tail */
        this->txTail = (this->txTail + 1) & USART_DEFAULT_TX_BUFFER_MASK;
 5e8:	8c 91       	ld	r24, X
 5ea:	8f 5f       	subi	r24, 0xFF	; 255
 5ec:	8c 93       	st	X, r24
 5ee:	08 c0       	rjmp	.+16     	; 0x600 <_ZN9__USART__5txIRQEv+0x48>
    }
    /* Else there's no data into buffer */
    else
        /* Disable TX interrupt */
        *(this->ucsrb) = *(this->ucsrb) & ~(1 << UDRIE0); 
 5f0:	dc 01       	movw	r26, r24
 5f2:	17 96       	adiw	r26, 0x07	; 7
 5f4:	ed 91       	ld	r30, X+
 5f6:	fc 91       	ld	r31, X
 5f8:	18 97       	sbiw	r26, 0x08	; 8
 5fa:	80 81       	ld	r24, Z
 5fc:	8f 7d       	andi	r24, 0xDF	; 223
 5fe:	80 83       	st	Z, r24
}
 600:	df 91       	pop	r29
 602:	cf 91       	pop	r28
 604:	08 95       	ret

00000606 <_Z41__static_initialization_and_destruction_0ii>:
Return:   None
************************/
ISR(USART0_UDRE_vect)
{
    USART.txIRQ();
}
 606:	af 92       	push	r10
 608:	bf 92       	push	r11
 60a:	cf 92       	push	r12
 60c:	df 92       	push	r13
 60e:	ef 92       	push	r14
 610:	ff 92       	push	r15
 612:	0f 93       	push	r16
 614:	1f 93       	push	r17
 616:	cf 93       	push	r28
 618:	df 93       	push	r29
 61a:	ec 01       	movw	r28, r24
 61c:	5b 01       	movw	r10, r22
 61e:	01 97       	sbiw	r24, 0x01	; 1
 620:	c9 f4       	brne	.+50     	; 0x654 <_Z41__static_initialization_and_destruction_0ii+0x4e>
 622:	6f 3f       	cpi	r22, 0xFF	; 255
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	b1 f4       	brne	.+44     	; 0x654 <_Z41__static_initialization_and_destruction_0ii+0x4e>
/* Dependencies */
#include "USART.h"

#if defined(HAS_USART)

__USART__ USART = __USART__(&UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0);
 628:	0f 2e       	mov	r0, r31
 62a:	f6 ec       	ldi	r31, 0xC6	; 198
 62c:	cf 2e       	mov	r12, r31
 62e:	d1 2c       	mov	r13, r1
 630:	f0 2d       	mov	r31, r0
 632:	0f 2e       	mov	r0, r31
 634:	f2 ec       	ldi	r31, 0xC2	; 194
 636:	ef 2e       	mov	r14, r31
 638:	f1 2c       	mov	r15, r1
 63a:	f0 2d       	mov	r31, r0
 63c:	01 ec       	ldi	r16, 0xC1	; 193
 63e:	10 e0       	ldi	r17, 0x00	; 0
 640:	20 ec       	ldi	r18, 0xC0	; 192
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	44 ec       	ldi	r20, 0xC4	; 196
 646:	50 e0       	ldi	r21, 0x00	; 0
 648:	65 ec       	ldi	r22, 0xC5	; 197
 64a:	70 e0       	ldi	r23, 0x00	; 0
 64c:	8f e7       	ldi	r24, 0x7F	; 127
 64e:	91 e0       	ldi	r25, 0x01	; 1
 650:	0e 94 23 01 	call	0x246	; 0x246 <_ZN9__USART__C1EPVhS1_S1_S1_S1_S1_>
 654:	cd 2b       	or	r28, r29
 656:	39 f4       	brne	.+14     	; 0x666 <_Z41__static_initialization_and_destruction_0ii+0x60>
 658:	ab 20       	and	r10, r11
 65a:	a0 94       	com	r10
 65c:	21 f4       	brne	.+8      	; 0x666 <_Z41__static_initialization_and_destruction_0ii+0x60>
 65e:	8f e7       	ldi	r24, 0x7F	; 127
 660:	91 e0       	ldi	r25, 0x01	; 1
 662:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZN9__USART__D1Ev>
Return:   None
************************/
ISR(USART0_UDRE_vect)
{
    USART.txIRQ();
}
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	1f 91       	pop	r17
 66c:	0f 91       	pop	r16
 66e:	ff 90       	pop	r15
 670:	ef 90       	pop	r14
 672:	df 90       	pop	r13
 674:	cf 90       	pop	r12
 676:	bf 90       	pop	r11
 678:	af 90       	pop	r10
 67a:	08 95       	ret

0000067c <__vector_18>:
#if defined(USART_TX_vect)
ISR(USART_RX_vect)
#elif defined(USART0_TX_vect)
ISR(USART0_RX_vect)
#endif
{
 67c:	1f 92       	push	r1
 67e:	0f 92       	push	r0
 680:	0f b6       	in	r0, 0x3f	; 63
 682:	0f 92       	push	r0
 684:	11 24       	eor	r1, r1
 686:	2f 93       	push	r18
 688:	3f 93       	push	r19
 68a:	4f 93       	push	r20
 68c:	5f 93       	push	r21
 68e:	6f 93       	push	r22
 690:	7f 93       	push	r23
 692:	8f 93       	push	r24
 694:	9f 93       	push	r25
 696:	af 93       	push	r26
 698:	bf 93       	push	r27
 69a:	ef 93       	push	r30
 69c:	ff 93       	push	r31
    USART.rxIRQ();
 69e:	8f e7       	ldi	r24, 0x7F	; 127
 6a0:	91 e0       	ldi	r25, 0x01	; 1
 6a2:	0e 94 c7 02 	call	0x58e	; 0x58e <_ZN9__USART__5rxIRQEv>
}
 6a6:	ff 91       	pop	r31
 6a8:	ef 91       	pop	r30
 6aa:	bf 91       	pop	r27
 6ac:	af 91       	pop	r26
 6ae:	9f 91       	pop	r25
 6b0:	8f 91       	pop	r24
 6b2:	7f 91       	pop	r23
 6b4:	6f 91       	pop	r22
 6b6:	5f 91       	pop	r21
 6b8:	4f 91       	pop	r20
 6ba:	3f 91       	pop	r19
 6bc:	2f 91       	pop	r18
 6be:	0f 90       	pop	r0
 6c0:	0f be       	out	0x3f, r0	; 63
 6c2:	0f 90       	pop	r0
 6c4:	1f 90       	pop	r1
 6c6:	18 95       	reti

000006c8 <__vector_19>:
Purpose:  Handling interrupts of USART TX
Input:    Interrupt vector
Return:   None
************************/
ISR(USART0_UDRE_vect)
{
 6c8:	1f 92       	push	r1
 6ca:	0f 92       	push	r0
 6cc:	0f b6       	in	r0, 0x3f	; 63
 6ce:	0f 92       	push	r0
 6d0:	11 24       	eor	r1, r1
 6d2:	2f 93       	push	r18
 6d4:	3f 93       	push	r19
 6d6:	4f 93       	push	r20
 6d8:	5f 93       	push	r21
 6da:	6f 93       	push	r22
 6dc:	7f 93       	push	r23
 6de:	8f 93       	push	r24
 6e0:	9f 93       	push	r25
 6e2:	af 93       	push	r26
 6e4:	bf 93       	push	r27
 6e6:	ef 93       	push	r30
 6e8:	ff 93       	push	r31
    USART.txIRQ();
 6ea:	8f e7       	ldi	r24, 0x7F	; 127
 6ec:	91 e0       	ldi	r25, 0x01	; 1
 6ee:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <_ZN9__USART__5txIRQEv>
}
 6f2:	ff 91       	pop	r31
 6f4:	ef 91       	pop	r30
 6f6:	bf 91       	pop	r27
 6f8:	af 91       	pop	r26
 6fa:	9f 91       	pop	r25
 6fc:	8f 91       	pop	r24
 6fe:	7f 91       	pop	r23
 700:	6f 91       	pop	r22
 702:	5f 91       	pop	r21
 704:	4f 91       	pop	r20
 706:	3f 91       	pop	r19
 708:	2f 91       	pop	r18
 70a:	0f 90       	pop	r0
 70c:	0f be       	out	0x3f, r0	; 63
 70e:	0f 90       	pop	r0
 710:	1f 90       	pop	r1
 712:	18 95       	reti

00000714 <_GLOBAL__sub_I_USART>:
 714:	6f ef       	ldi	r22, 0xFF	; 255
 716:	7f ef       	ldi	r23, 0xFF	; 255
 718:	81 e0       	ldi	r24, 0x01	; 1
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 03 03 	call	0x606	; 0x606 <_Z41__static_initialization_and_destruction_0ii>
 720:	08 95       	ret

00000722 <_GLOBAL__sub_D_USART>:
 722:	6f ef       	ldi	r22, 0xFF	; 255
 724:	7f ef       	ldi	r23, 0xFF	; 255
 726:	80 e0       	ldi	r24, 0x00	; 0
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	0e 94 03 03 	call	0x606	; 0x606 <_Z41__static_initialization_and_destruction_0ii>
 72e:	08 95       	ret

00000730 <main>:
/* Variables */
uint8_t arrayToStoreBytes[READ_ARRAY_SIZE];

int main(void)
{
    USART.begin(115200);
 730:	40 e0       	ldi	r20, 0x00	; 0
 732:	52 ec       	ldi	r21, 0xC2	; 194
 734:	61 e0       	ldi	r22, 0x01	; 1
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	8f e7       	ldi	r24, 0x7F	; 127
 73a:	91 e0       	ldi	r25, 0x01	; 1
 73c:	0e 94 4b 01 	call	0x296	; 0x296 <_ZN9__USART__5beginEm>
    USART.print("USART - Demo Read\n");
 740:	60 e0       	ldi	r22, 0x00	; 0
 742:	71 e0       	ldi	r23, 0x01	; 1
 744:	8f e7       	ldi	r24, 0x7F	; 127
 746:	91 e0       	ldi	r25, 0x01	; 1
 748:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
    while (1) 
    {
        int8_t howManyBytes = USART.read(arrayToStoreBytes, (READ_ARRAY_SIZE / READ_ARRAY_ELEMENT_SIZE), READ_ARRAY_TIMEOUT_VALUE);
 74c:	02 e0       	ldi	r16, 0x02	; 2
 74e:	10 e0       	ldi	r17, 0x00	; 0
 750:	20 e0       	ldi	r18, 0x00	; 0
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	44 e0       	ldi	r20, 0x04	; 4
 756:	60 e9       	ldi	r22, 0x90	; 144
 758:	73 e0       	ldi	r23, 0x03	; 3
 75a:	8f e7       	ldi	r24, 0x7F	; 127
 75c:	91 e0       	ldi	r25, 0x01	; 1
 75e:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN9__USART__4readEPhhm>
 762:	c8 2f       	mov	r28, r24
        switch (howManyBytes)
 764:	8f 3f       	cpi	r24, 0xFF	; 255
 766:	61 f0       	breq	.+24     	; 0x780 <main+0x50>
 768:	88 23       	and	r24, r24
 76a:	19 f0       	breq	.+6      	; 0x772 <main+0x42>
 76c:	8e 3f       	cpi	r24, 0xFE	; 254
 76e:	b1 f4       	brne	.+44     	; 0x79c <main+0x6c>
 770:	0e c0       	rjmp	.+28     	; 0x78e <main+0x5e>
        {
            case 0:
                USART.print("Size of array is '0'\n");
 772:	63 e1       	ldi	r22, 0x13	; 19
 774:	71 e0       	ldi	r23, 0x01	; 1
 776:	8f e7       	ldi	r24, 0x7F	; 127
 778:	91 e0       	ldi	r25, 0x01	; 1
 77a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
                break;
 77e:	2a c0       	rjmp	.+84     	; 0x7d4 <main+0xa4>
            case -1:
                USART.print("No data available\n");
 780:	69 e2       	ldi	r22, 0x29	; 41
 782:	71 e0       	ldi	r23, 0x01	; 1
 784:	8f e7       	ldi	r24, 0x7F	; 127
 786:	91 e0       	ldi	r25, 0x01	; 1
 788:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
                break;
 78c:	23 c0       	rjmp	.+70     	; 0x7d4 <main+0xa4>
            case -2:
                USART.print("Timeout occured\n");
 78e:	6c e3       	ldi	r22, 0x3C	; 60
 790:	71 e0       	ldi	r23, 0x01	; 1
 792:	8f e7       	ldi	r24, 0x7F	; 127
 794:	91 e0       	ldi	r25, 0x01	; 1
 796:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
                break;
 79a:	1c c0       	rjmp	.+56     	; 0x7d4 <main+0xa4>
            default:
                USART.print("Amount of bytes received: ");
 79c:	6d e4       	ldi	r22, 0x4D	; 77
 79e:	71 e0       	ldi	r23, 0x01	; 1
 7a0:	8f e7       	ldi	r24, 0x7F	; 127
 7a2:	91 e0       	ldi	r25, 0x01	; 1
 7a4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
                USART.println((uint8_t)howManyBytes);
 7a8:	6c 2f       	mov	r22, r28
 7aa:	8f e7       	ldi	r24, 0x7F	; 127
 7ac:	91 e0       	ldi	r25, 0x01	; 1
 7ae:	0e 94 bc 02 	call	0x578	; 0x578 <_ZN9__USART__7printlnEh>
                USART.print("Bytes received: ");
 7b2:	68 e6       	ldi	r22, 0x68	; 104
 7b4:	71 e0       	ldi	r23, 0x01	; 1
 7b6:	8f e7       	ldi	r24, 0x7F	; 127
 7b8:	91 e0       	ldi	r25, 0x01	; 1
 7ba:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN9__USART__5printEPKc>
                USART.write(arrayToStoreBytes, (READ_ARRAY_SIZE / READ_ARRAY_ELEMENT_SIZE));
 7be:	44 e0       	ldi	r20, 0x04	; 4
 7c0:	60 e9       	ldi	r22, 0x90	; 144
 7c2:	73 e0       	ldi	r23, 0x03	; 3
 7c4:	8f e7       	ldi	r24, 0x7F	; 127
 7c6:	91 e0       	ldi	r25, 0x01	; 1
 7c8:	0e 94 45 02 	call	0x48a	; 0x48a <_ZN9__USART__5writeEPKhh>
                USART.println();
 7cc:	8f e7       	ldi	r24, 0x7F	; 127
 7ce:	91 e0       	ldi	r25, 0x01	; 1
 7d0:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN9__USART__7printlnEv>
                break;
        }

        Time.delay(1);
 7d4:	41 e0       	ldi	r20, 0x01	; 1
 7d6:	50 e0       	ldi	r21, 0x00	; 0
 7d8:	60 e0       	ldi	r22, 0x00	; 0
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	8a e7       	ldi	r24, 0x7A	; 122
 7de:	91 e0       	ldi	r25, 0x01	; 1
 7e0:	0e 94 c5 00 	call	0x18a	; 0x18a <_ZN8__Time__5delayEm>

int main(void)
{
    USART.begin(115200);
    USART.print("USART - Demo Read\n");
    while (1) 
 7e4:	b3 cf       	rjmp	.-154    	; 0x74c <main+0x1c>

000007e6 <__subsf3>:
 7e6:	50 58       	subi	r21, 0x80	; 128

000007e8 <__addsf3>:
 7e8:	bb 27       	eor	r27, r27
 7ea:	aa 27       	eor	r26, r26
 7ec:	0e 94 0b 04 	call	0x816	; 0x816 <__addsf3x>
 7f0:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_round>
 7f4:	0e 94 47 05 	call	0xa8e	; 0xa8e <__fp_pscA>
 7f8:	38 f0       	brcs	.+14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fa:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fp_pscB>
 7fe:	20 f0       	brcs	.+8      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 800:	39 f4       	brne	.+14     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 802:	9f 3f       	cpi	r25, 0xFF	; 255
 804:	19 f4       	brne	.+6      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 806:	26 f4       	brtc	.+8      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 808:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_nan>
 80c:	0e f4       	brtc	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80e:	e0 95       	com	r30
 810:	e7 fb       	bst	r30, 7
 812:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <__fp_inf>

00000816 <__addsf3x>:
 816:	e9 2f       	mov	r30, r25
 818:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_split3>
 81c:	58 f3       	brcs	.-42     	; 0x7f4 <__addsf3+0xc>
 81e:	ba 17       	cp	r27, r26
 820:	62 07       	cpc	r22, r18
 822:	73 07       	cpc	r23, r19
 824:	84 07       	cpc	r24, r20
 826:	95 07       	cpc	r25, r21
 828:	20 f0       	brcs	.+8      	; 0x832 <__addsf3x+0x1c>
 82a:	79 f4       	brne	.+30     	; 0x84a <__addsf3x+0x34>
 82c:	a6 f5       	brtc	.+104    	; 0x896 <__addsf3x+0x80>
 82e:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_zero>
 832:	0e f4       	brtc	.+2      	; 0x836 <__addsf3x+0x20>
 834:	e0 95       	com	r30
 836:	0b 2e       	mov	r0, r27
 838:	ba 2f       	mov	r27, r26
 83a:	a0 2d       	mov	r26, r0
 83c:	0b 01       	movw	r0, r22
 83e:	b9 01       	movw	r22, r18
 840:	90 01       	movw	r18, r0
 842:	0c 01       	movw	r0, r24
 844:	ca 01       	movw	r24, r20
 846:	a0 01       	movw	r20, r0
 848:	11 24       	eor	r1, r1
 84a:	ff 27       	eor	r31, r31
 84c:	59 1b       	sub	r21, r25
 84e:	99 f0       	breq	.+38     	; 0x876 <__addsf3x+0x60>
 850:	59 3f       	cpi	r21, 0xF9	; 249
 852:	50 f4       	brcc	.+20     	; 0x868 <__addsf3x+0x52>
 854:	50 3e       	cpi	r21, 0xE0	; 224
 856:	68 f1       	brcs	.+90     	; 0x8b2 <__addsf3x+0x9c>
 858:	1a 16       	cp	r1, r26
 85a:	f0 40       	sbci	r31, 0x00	; 0
 85c:	a2 2f       	mov	r26, r18
 85e:	23 2f       	mov	r18, r19
 860:	34 2f       	mov	r19, r20
 862:	44 27       	eor	r20, r20
 864:	58 5f       	subi	r21, 0xF8	; 248
 866:	f3 cf       	rjmp	.-26     	; 0x84e <__addsf3x+0x38>
 868:	46 95       	lsr	r20
 86a:	37 95       	ror	r19
 86c:	27 95       	ror	r18
 86e:	a7 95       	ror	r26
 870:	f0 40       	sbci	r31, 0x00	; 0
 872:	53 95       	inc	r21
 874:	c9 f7       	brne	.-14     	; 0x868 <__addsf3x+0x52>
 876:	7e f4       	brtc	.+30     	; 0x896 <__addsf3x+0x80>
 878:	1f 16       	cp	r1, r31
 87a:	ba 0b       	sbc	r27, r26
 87c:	62 0b       	sbc	r22, r18
 87e:	73 0b       	sbc	r23, r19
 880:	84 0b       	sbc	r24, r20
 882:	ba f0       	brmi	.+46     	; 0x8b2 <__addsf3x+0x9c>
 884:	91 50       	subi	r25, 0x01	; 1
 886:	a1 f0       	breq	.+40     	; 0x8b0 <__addsf3x+0x9a>
 888:	ff 0f       	add	r31, r31
 88a:	bb 1f       	adc	r27, r27
 88c:	66 1f       	adc	r22, r22
 88e:	77 1f       	adc	r23, r23
 890:	88 1f       	adc	r24, r24
 892:	c2 f7       	brpl	.-16     	; 0x884 <__addsf3x+0x6e>
 894:	0e c0       	rjmp	.+28     	; 0x8b2 <__addsf3x+0x9c>
 896:	ba 0f       	add	r27, r26
 898:	62 1f       	adc	r22, r18
 89a:	73 1f       	adc	r23, r19
 89c:	84 1f       	adc	r24, r20
 89e:	48 f4       	brcc	.+18     	; 0x8b2 <__addsf3x+0x9c>
 8a0:	87 95       	ror	r24
 8a2:	77 95       	ror	r23
 8a4:	67 95       	ror	r22
 8a6:	b7 95       	ror	r27
 8a8:	f7 95       	ror	r31
 8aa:	9e 3f       	cpi	r25, 0xFE	; 254
 8ac:	08 f0       	brcs	.+2      	; 0x8b0 <__addsf3x+0x9a>
 8ae:	b0 cf       	rjmp	.-160    	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 8b0:	93 95       	inc	r25
 8b2:	88 0f       	add	r24, r24
 8b4:	08 f0       	brcs	.+2      	; 0x8b8 <__addsf3x+0xa2>
 8b6:	99 27       	eor	r25, r25
 8b8:	ee 0f       	add	r30, r30
 8ba:	97 95       	ror	r25
 8bc:	87 95       	ror	r24
 8be:	08 95       	ret

000008c0 <__divsf3>:
 8c0:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__divsf3x>
 8c4:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_round>
 8c8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fp_pscB>
 8cc:	58 f0       	brcs	.+22     	; 0x8e4 <__divsf3+0x24>
 8ce:	0e 94 47 05 	call	0xa8e	; 0xa8e <__fp_pscA>
 8d2:	40 f0       	brcs	.+16     	; 0x8e4 <__divsf3+0x24>
 8d4:	29 f4       	brne	.+10     	; 0x8e0 <__divsf3+0x20>
 8d6:	5f 3f       	cpi	r21, 0xFF	; 255
 8d8:	29 f0       	breq	.+10     	; 0x8e4 <__divsf3+0x24>
 8da:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <__fp_inf>
 8de:	51 11       	cpse	r21, r1
 8e0:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_szero>
 8e4:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_nan>

000008e8 <__divsf3x>:
 8e8:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_split3>
 8ec:	68 f3       	brcs	.-38     	; 0x8c8 <__divsf3+0x8>

000008ee <__divsf3_pse>:
 8ee:	99 23       	and	r25, r25
 8f0:	b1 f3       	breq	.-20     	; 0x8de <__divsf3+0x1e>
 8f2:	55 23       	and	r21, r21
 8f4:	91 f3       	breq	.-28     	; 0x8da <__divsf3+0x1a>
 8f6:	95 1b       	sub	r25, r21
 8f8:	55 0b       	sbc	r21, r21
 8fa:	bb 27       	eor	r27, r27
 8fc:	aa 27       	eor	r26, r26
 8fe:	62 17       	cp	r22, r18
 900:	73 07       	cpc	r23, r19
 902:	84 07       	cpc	r24, r20
 904:	38 f0       	brcs	.+14     	; 0x914 <__stack+0x15>
 906:	9f 5f       	subi	r25, 0xFF	; 255
 908:	5f 4f       	sbci	r21, 0xFF	; 255
 90a:	22 0f       	add	r18, r18
 90c:	33 1f       	adc	r19, r19
 90e:	44 1f       	adc	r20, r20
 910:	aa 1f       	adc	r26, r26
 912:	a9 f3       	breq	.-22     	; 0x8fe <__divsf3_pse+0x10>
 914:	35 d0       	rcall	.+106    	; 0x980 <__stack+0x81>
 916:	0e 2e       	mov	r0, r30
 918:	3a f0       	brmi	.+14     	; 0x928 <__stack+0x29>
 91a:	e0 e8       	ldi	r30, 0x80	; 128
 91c:	32 d0       	rcall	.+100    	; 0x982 <__stack+0x83>
 91e:	91 50       	subi	r25, 0x01	; 1
 920:	50 40       	sbci	r21, 0x00	; 0
 922:	e6 95       	lsr	r30
 924:	00 1c       	adc	r0, r0
 926:	ca f7       	brpl	.-14     	; 0x91a <__stack+0x1b>
 928:	2b d0       	rcall	.+86     	; 0x980 <__stack+0x81>
 92a:	fe 2f       	mov	r31, r30
 92c:	29 d0       	rcall	.+82     	; 0x980 <__stack+0x81>
 92e:	66 0f       	add	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	88 1f       	adc	r24, r24
 934:	bb 1f       	adc	r27, r27
 936:	26 17       	cp	r18, r22
 938:	37 07       	cpc	r19, r23
 93a:	48 07       	cpc	r20, r24
 93c:	ab 07       	cpc	r26, r27
 93e:	b0 e8       	ldi	r27, 0x80	; 128
 940:	09 f0       	breq	.+2      	; 0x944 <__stack+0x45>
 942:	bb 0b       	sbc	r27, r27
 944:	80 2d       	mov	r24, r0
 946:	bf 01       	movw	r22, r30
 948:	ff 27       	eor	r31, r31
 94a:	93 58       	subi	r25, 0x83	; 131
 94c:	5f 4f       	sbci	r21, 0xFF	; 255
 94e:	3a f0       	brmi	.+14     	; 0x95e <__stack+0x5f>
 950:	9e 3f       	cpi	r25, 0xFE	; 254
 952:	51 05       	cpc	r21, r1
 954:	78 f0       	brcs	.+30     	; 0x974 <__stack+0x75>
 956:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <__fp_inf>
 95a:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_szero>
 95e:	5f 3f       	cpi	r21, 0xFF	; 255
 960:	e4 f3       	brlt	.-8      	; 0x95a <__stack+0x5b>
 962:	98 3e       	cpi	r25, 0xE8	; 232
 964:	d4 f3       	brlt	.-12     	; 0x95a <__stack+0x5b>
 966:	86 95       	lsr	r24
 968:	77 95       	ror	r23
 96a:	67 95       	ror	r22
 96c:	b7 95       	ror	r27
 96e:	f7 95       	ror	r31
 970:	9f 5f       	subi	r25, 0xFF	; 255
 972:	c9 f7       	brne	.-14     	; 0x966 <__stack+0x67>
 974:	88 0f       	add	r24, r24
 976:	91 1d       	adc	r25, r1
 978:	96 95       	lsr	r25
 97a:	87 95       	ror	r24
 97c:	97 f9       	bld	r25, 7
 97e:	08 95       	ret
 980:	e1 e0       	ldi	r30, 0x01	; 1
 982:	66 0f       	add	r22, r22
 984:	77 1f       	adc	r23, r23
 986:	88 1f       	adc	r24, r24
 988:	bb 1f       	adc	r27, r27
 98a:	62 17       	cp	r22, r18
 98c:	73 07       	cpc	r23, r19
 98e:	84 07       	cpc	r24, r20
 990:	ba 07       	cpc	r27, r26
 992:	20 f0       	brcs	.+8      	; 0x99c <__stack+0x9d>
 994:	62 1b       	sub	r22, r18
 996:	73 0b       	sbc	r23, r19
 998:	84 0b       	sbc	r24, r20
 99a:	ba 0b       	sbc	r27, r26
 99c:	ee 1f       	adc	r30, r30
 99e:	88 f7       	brcc	.-30     	; 0x982 <__stack+0x83>
 9a0:	e0 95       	com	r30
 9a2:	08 95       	ret

000009a4 <__fixunssfsi>:
 9a4:	0e 94 6e 05 	call	0xadc	; 0xadc <__fp_splitA>
 9a8:	88 f0       	brcs	.+34     	; 0x9cc <__fixunssfsi+0x28>
 9aa:	9f 57       	subi	r25, 0x7F	; 127
 9ac:	98 f0       	brcs	.+38     	; 0x9d4 <__fixunssfsi+0x30>
 9ae:	b9 2f       	mov	r27, r25
 9b0:	99 27       	eor	r25, r25
 9b2:	b7 51       	subi	r27, 0x17	; 23
 9b4:	b0 f0       	brcs	.+44     	; 0x9e2 <__fixunssfsi+0x3e>
 9b6:	e1 f0       	breq	.+56     	; 0x9f0 <__fixunssfsi+0x4c>
 9b8:	66 0f       	add	r22, r22
 9ba:	77 1f       	adc	r23, r23
 9bc:	88 1f       	adc	r24, r24
 9be:	99 1f       	adc	r25, r25
 9c0:	1a f0       	brmi	.+6      	; 0x9c8 <__fixunssfsi+0x24>
 9c2:	ba 95       	dec	r27
 9c4:	c9 f7       	brne	.-14     	; 0x9b8 <__fixunssfsi+0x14>
 9c6:	14 c0       	rjmp	.+40     	; 0x9f0 <__fixunssfsi+0x4c>
 9c8:	b1 30       	cpi	r27, 0x01	; 1
 9ca:	91 f0       	breq	.+36     	; 0x9f0 <__fixunssfsi+0x4c>
 9cc:	0e 94 88 05 	call	0xb10	; 0xb10 <__fp_zero>
 9d0:	b1 e0       	ldi	r27, 0x01	; 1
 9d2:	08 95       	ret
 9d4:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_zero>
 9d8:	67 2f       	mov	r22, r23
 9da:	78 2f       	mov	r23, r24
 9dc:	88 27       	eor	r24, r24
 9de:	b8 5f       	subi	r27, 0xF8	; 248
 9e0:	39 f0       	breq	.+14     	; 0x9f0 <__fixunssfsi+0x4c>
 9e2:	b9 3f       	cpi	r27, 0xF9	; 249
 9e4:	cc f3       	brlt	.-14     	; 0x9d8 <__fixunssfsi+0x34>
 9e6:	86 95       	lsr	r24
 9e8:	77 95       	ror	r23
 9ea:	67 95       	ror	r22
 9ec:	b3 95       	inc	r27
 9ee:	d9 f7       	brne	.-10     	; 0x9e6 <__fixunssfsi+0x42>
 9f0:	3e f4       	brtc	.+14     	; 0xa00 <__fixunssfsi+0x5c>
 9f2:	90 95       	com	r25
 9f4:	80 95       	com	r24
 9f6:	70 95       	com	r23
 9f8:	61 95       	neg	r22
 9fa:	7f 4f       	sbci	r23, 0xFF	; 255
 9fc:	8f 4f       	sbci	r24, 0xFF	; 255
 9fe:	9f 4f       	sbci	r25, 0xFF	; 255
 a00:	08 95       	ret

00000a02 <__floatunsisf>:
 a02:	e8 94       	clt
 a04:	09 c0       	rjmp	.+18     	; 0xa18 <__floatsisf+0x12>

00000a06 <__floatsisf>:
 a06:	97 fb       	bst	r25, 7
 a08:	3e f4       	brtc	.+14     	; 0xa18 <__floatsisf+0x12>
 a0a:	90 95       	com	r25
 a0c:	80 95       	com	r24
 a0e:	70 95       	com	r23
 a10:	61 95       	neg	r22
 a12:	7f 4f       	sbci	r23, 0xFF	; 255
 a14:	8f 4f       	sbci	r24, 0xFF	; 255
 a16:	9f 4f       	sbci	r25, 0xFF	; 255
 a18:	99 23       	and	r25, r25
 a1a:	a9 f0       	breq	.+42     	; 0xa46 <__floatsisf+0x40>
 a1c:	f9 2f       	mov	r31, r25
 a1e:	96 e9       	ldi	r25, 0x96	; 150
 a20:	bb 27       	eor	r27, r27
 a22:	93 95       	inc	r25
 a24:	f6 95       	lsr	r31
 a26:	87 95       	ror	r24
 a28:	77 95       	ror	r23
 a2a:	67 95       	ror	r22
 a2c:	b7 95       	ror	r27
 a2e:	f1 11       	cpse	r31, r1
 a30:	f8 cf       	rjmp	.-16     	; 0xa22 <__floatsisf+0x1c>
 a32:	fa f4       	brpl	.+62     	; 0xa72 <__floatsisf+0x6c>
 a34:	bb 0f       	add	r27, r27
 a36:	11 f4       	brne	.+4      	; 0xa3c <__floatsisf+0x36>
 a38:	60 ff       	sbrs	r22, 0
 a3a:	1b c0       	rjmp	.+54     	; 0xa72 <__floatsisf+0x6c>
 a3c:	6f 5f       	subi	r22, 0xFF	; 255
 a3e:	7f 4f       	sbci	r23, 0xFF	; 255
 a40:	8f 4f       	sbci	r24, 0xFF	; 255
 a42:	9f 4f       	sbci	r25, 0xFF	; 255
 a44:	16 c0       	rjmp	.+44     	; 0xa72 <__floatsisf+0x6c>
 a46:	88 23       	and	r24, r24
 a48:	11 f0       	breq	.+4      	; 0xa4e <__floatsisf+0x48>
 a4a:	96 e9       	ldi	r25, 0x96	; 150
 a4c:	11 c0       	rjmp	.+34     	; 0xa70 <__floatsisf+0x6a>
 a4e:	77 23       	and	r23, r23
 a50:	21 f0       	breq	.+8      	; 0xa5a <__floatsisf+0x54>
 a52:	9e e8       	ldi	r25, 0x8E	; 142
 a54:	87 2f       	mov	r24, r23
 a56:	76 2f       	mov	r23, r22
 a58:	05 c0       	rjmp	.+10     	; 0xa64 <__floatsisf+0x5e>
 a5a:	66 23       	and	r22, r22
 a5c:	71 f0       	breq	.+28     	; 0xa7a <__floatsisf+0x74>
 a5e:	96 e8       	ldi	r25, 0x86	; 134
 a60:	86 2f       	mov	r24, r22
 a62:	70 e0       	ldi	r23, 0x00	; 0
 a64:	60 e0       	ldi	r22, 0x00	; 0
 a66:	2a f0       	brmi	.+10     	; 0xa72 <__floatsisf+0x6c>
 a68:	9a 95       	dec	r25
 a6a:	66 0f       	add	r22, r22
 a6c:	77 1f       	adc	r23, r23
 a6e:	88 1f       	adc	r24, r24
 a70:	da f7       	brpl	.-10     	; 0xa68 <__floatsisf+0x62>
 a72:	88 0f       	add	r24, r24
 a74:	96 95       	lsr	r25
 a76:	87 95       	ror	r24
 a78:	97 f9       	bld	r25, 7
 a7a:	08 95       	ret

00000a7c <__fp_inf>:
 a7c:	97 f9       	bld	r25, 7
 a7e:	9f 67       	ori	r25, 0x7F	; 127
 a80:	80 e8       	ldi	r24, 0x80	; 128
 a82:	70 e0       	ldi	r23, 0x00	; 0
 a84:	60 e0       	ldi	r22, 0x00	; 0
 a86:	08 95       	ret

00000a88 <__fp_nan>:
 a88:	9f ef       	ldi	r25, 0xFF	; 255
 a8a:	80 ec       	ldi	r24, 0xC0	; 192
 a8c:	08 95       	ret

00000a8e <__fp_pscA>:
 a8e:	00 24       	eor	r0, r0
 a90:	0a 94       	dec	r0
 a92:	16 16       	cp	r1, r22
 a94:	17 06       	cpc	r1, r23
 a96:	18 06       	cpc	r1, r24
 a98:	09 06       	cpc	r0, r25
 a9a:	08 95       	ret

00000a9c <__fp_pscB>:
 a9c:	00 24       	eor	r0, r0
 a9e:	0a 94       	dec	r0
 aa0:	12 16       	cp	r1, r18
 aa2:	13 06       	cpc	r1, r19
 aa4:	14 06       	cpc	r1, r20
 aa6:	05 06       	cpc	r0, r21
 aa8:	08 95       	ret

00000aaa <__fp_round>:
 aaa:	09 2e       	mov	r0, r25
 aac:	03 94       	inc	r0
 aae:	00 0c       	add	r0, r0
 ab0:	11 f4       	brne	.+4      	; 0xab6 <__fp_round+0xc>
 ab2:	88 23       	and	r24, r24
 ab4:	52 f0       	brmi	.+20     	; 0xaca <__fp_round+0x20>
 ab6:	bb 0f       	add	r27, r27
 ab8:	40 f4       	brcc	.+16     	; 0xaca <__fp_round+0x20>
 aba:	bf 2b       	or	r27, r31
 abc:	11 f4       	brne	.+4      	; 0xac2 <__fp_round+0x18>
 abe:	60 ff       	sbrs	r22, 0
 ac0:	04 c0       	rjmp	.+8      	; 0xaca <__fp_round+0x20>
 ac2:	6f 5f       	subi	r22, 0xFF	; 255
 ac4:	7f 4f       	sbci	r23, 0xFF	; 255
 ac6:	8f 4f       	sbci	r24, 0xFF	; 255
 ac8:	9f 4f       	sbci	r25, 0xFF	; 255
 aca:	08 95       	ret

00000acc <__fp_split3>:
 acc:	57 fd       	sbrc	r21, 7
 ace:	90 58       	subi	r25, 0x80	; 128
 ad0:	44 0f       	add	r20, r20
 ad2:	55 1f       	adc	r21, r21
 ad4:	59 f0       	breq	.+22     	; 0xaec <__fp_splitA+0x10>
 ad6:	5f 3f       	cpi	r21, 0xFF	; 255
 ad8:	71 f0       	breq	.+28     	; 0xaf6 <__fp_splitA+0x1a>
 ada:	47 95       	ror	r20

00000adc <__fp_splitA>:
 adc:	88 0f       	add	r24, r24
 ade:	97 fb       	bst	r25, 7
 ae0:	99 1f       	adc	r25, r25
 ae2:	61 f0       	breq	.+24     	; 0xafc <__fp_splitA+0x20>
 ae4:	9f 3f       	cpi	r25, 0xFF	; 255
 ae6:	79 f0       	breq	.+30     	; 0xb06 <__fp_splitA+0x2a>
 ae8:	87 95       	ror	r24
 aea:	08 95       	ret
 aec:	12 16       	cp	r1, r18
 aee:	13 06       	cpc	r1, r19
 af0:	14 06       	cpc	r1, r20
 af2:	55 1f       	adc	r21, r21
 af4:	f2 cf       	rjmp	.-28     	; 0xada <__fp_split3+0xe>
 af6:	46 95       	lsr	r20
 af8:	f1 df       	rcall	.-30     	; 0xadc <__fp_splitA>
 afa:	08 c0       	rjmp	.+16     	; 0xb0c <__fp_splitA+0x30>
 afc:	16 16       	cp	r1, r22
 afe:	17 06       	cpc	r1, r23
 b00:	18 06       	cpc	r1, r24
 b02:	99 1f       	adc	r25, r25
 b04:	f1 cf       	rjmp	.-30     	; 0xae8 <__fp_splitA+0xc>
 b06:	86 95       	lsr	r24
 b08:	71 05       	cpc	r23, r1
 b0a:	61 05       	cpc	r22, r1
 b0c:	08 94       	sec
 b0e:	08 95       	ret

00000b10 <__fp_zero>:
 b10:	e8 94       	clt

00000b12 <__fp_szero>:
 b12:	bb 27       	eor	r27, r27
 b14:	66 27       	eor	r22, r22
 b16:	77 27       	eor	r23, r23
 b18:	cb 01       	movw	r24, r22
 b1a:	97 f9       	bld	r25, 7
 b1c:	08 95       	ret

00000b1e <__mulsf3>:
 b1e:	0e 94 a2 05 	call	0xb44	; 0xb44 <__mulsf3x>
 b22:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_round>
 b26:	0e 94 47 05 	call	0xa8e	; 0xa8e <__fp_pscA>
 b2a:	38 f0       	brcs	.+14     	; 0xb3a <__mulsf3+0x1c>
 b2c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fp_pscB>
 b30:	20 f0       	brcs	.+8      	; 0xb3a <__mulsf3+0x1c>
 b32:	95 23       	and	r25, r21
 b34:	11 f0       	breq	.+4      	; 0xb3a <__mulsf3+0x1c>
 b36:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <__fp_inf>
 b3a:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_nan>
 b3e:	11 24       	eor	r1, r1
 b40:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_szero>

00000b44 <__mulsf3x>:
 b44:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_split3>
 b48:	70 f3       	brcs	.-36     	; 0xb26 <__mulsf3+0x8>

00000b4a <__mulsf3_pse>:
 b4a:	95 9f       	mul	r25, r21
 b4c:	c1 f3       	breq	.-16     	; 0xb3e <__mulsf3+0x20>
 b4e:	95 0f       	add	r25, r21
 b50:	50 e0       	ldi	r21, 0x00	; 0
 b52:	55 1f       	adc	r21, r21
 b54:	62 9f       	mul	r22, r18
 b56:	f0 01       	movw	r30, r0
 b58:	72 9f       	mul	r23, r18
 b5a:	bb 27       	eor	r27, r27
 b5c:	f0 0d       	add	r31, r0
 b5e:	b1 1d       	adc	r27, r1
 b60:	63 9f       	mul	r22, r19
 b62:	aa 27       	eor	r26, r26
 b64:	f0 0d       	add	r31, r0
 b66:	b1 1d       	adc	r27, r1
 b68:	aa 1f       	adc	r26, r26
 b6a:	64 9f       	mul	r22, r20
 b6c:	66 27       	eor	r22, r22
 b6e:	b0 0d       	add	r27, r0
 b70:	a1 1d       	adc	r26, r1
 b72:	66 1f       	adc	r22, r22
 b74:	82 9f       	mul	r24, r18
 b76:	22 27       	eor	r18, r18
 b78:	b0 0d       	add	r27, r0
 b7a:	a1 1d       	adc	r26, r1
 b7c:	62 1f       	adc	r22, r18
 b7e:	73 9f       	mul	r23, r19
 b80:	b0 0d       	add	r27, r0
 b82:	a1 1d       	adc	r26, r1
 b84:	62 1f       	adc	r22, r18
 b86:	83 9f       	mul	r24, r19
 b88:	a0 0d       	add	r26, r0
 b8a:	61 1d       	adc	r22, r1
 b8c:	22 1f       	adc	r18, r18
 b8e:	74 9f       	mul	r23, r20
 b90:	33 27       	eor	r19, r19
 b92:	a0 0d       	add	r26, r0
 b94:	61 1d       	adc	r22, r1
 b96:	23 1f       	adc	r18, r19
 b98:	84 9f       	mul	r24, r20
 b9a:	60 0d       	add	r22, r0
 b9c:	21 1d       	adc	r18, r1
 b9e:	82 2f       	mov	r24, r18
 ba0:	76 2f       	mov	r23, r22
 ba2:	6a 2f       	mov	r22, r26
 ba4:	11 24       	eor	r1, r1
 ba6:	9f 57       	subi	r25, 0x7F	; 127
 ba8:	50 40       	sbci	r21, 0x00	; 0
 baa:	9a f0       	brmi	.+38     	; 0xbd2 <__mulsf3_pse+0x88>
 bac:	f1 f0       	breq	.+60     	; 0xbea <__mulsf3_pse+0xa0>
 bae:	88 23       	and	r24, r24
 bb0:	4a f0       	brmi	.+18     	; 0xbc4 <__mulsf3_pse+0x7a>
 bb2:	ee 0f       	add	r30, r30
 bb4:	ff 1f       	adc	r31, r31
 bb6:	bb 1f       	adc	r27, r27
 bb8:	66 1f       	adc	r22, r22
 bba:	77 1f       	adc	r23, r23
 bbc:	88 1f       	adc	r24, r24
 bbe:	91 50       	subi	r25, 0x01	; 1
 bc0:	50 40       	sbci	r21, 0x00	; 0
 bc2:	a9 f7       	brne	.-22     	; 0xbae <__mulsf3_pse+0x64>
 bc4:	9e 3f       	cpi	r25, 0xFE	; 254
 bc6:	51 05       	cpc	r21, r1
 bc8:	80 f0       	brcs	.+32     	; 0xbea <__mulsf3_pse+0xa0>
 bca:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <__fp_inf>
 bce:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_szero>
 bd2:	5f 3f       	cpi	r21, 0xFF	; 255
 bd4:	e4 f3       	brlt	.-8      	; 0xbce <__mulsf3_pse+0x84>
 bd6:	98 3e       	cpi	r25, 0xE8	; 232
 bd8:	d4 f3       	brlt	.-12     	; 0xbce <__mulsf3_pse+0x84>
 bda:	86 95       	lsr	r24
 bdc:	77 95       	ror	r23
 bde:	67 95       	ror	r22
 be0:	b7 95       	ror	r27
 be2:	f7 95       	ror	r31
 be4:	e7 95       	ror	r30
 be6:	9f 5f       	subi	r25, 0xFF	; 255
 be8:	c1 f7       	brne	.-16     	; 0xbda <__mulsf3_pse+0x90>
 bea:	fe 2b       	or	r31, r30
 bec:	88 0f       	add	r24, r24
 bee:	91 1d       	adc	r25, r1
 bf0:	96 95       	lsr	r25
 bf2:	87 95       	ror	r24
 bf4:	97 f9       	bld	r25, 7
 bf6:	08 95       	ret

00000bf8 <round>:
 bf8:	0e 94 6e 05 	call	0xadc	; 0xadc <__fp_splitA>
 bfc:	e8 f0       	brcs	.+58     	; 0xc38 <round+0x40>
 bfe:	9e 37       	cpi	r25, 0x7E	; 126
 c00:	e8 f0       	brcs	.+58     	; 0xc3c <round+0x44>
 c02:	96 39       	cpi	r25, 0x96	; 150
 c04:	b8 f4       	brcc	.+46     	; 0xc34 <round+0x3c>
 c06:	9e 38       	cpi	r25, 0x8E	; 142
 c08:	48 f4       	brcc	.+18     	; 0xc1c <round+0x24>
 c0a:	67 2f       	mov	r22, r23
 c0c:	78 2f       	mov	r23, r24
 c0e:	88 27       	eor	r24, r24
 c10:	98 5f       	subi	r25, 0xF8	; 248
 c12:	f9 cf       	rjmp	.-14     	; 0xc06 <round+0xe>
 c14:	86 95       	lsr	r24
 c16:	77 95       	ror	r23
 c18:	67 95       	ror	r22
 c1a:	93 95       	inc	r25
 c1c:	95 39       	cpi	r25, 0x95	; 149
 c1e:	d0 f3       	brcs	.-12     	; 0xc14 <round+0x1c>
 c20:	b6 2f       	mov	r27, r22
 c22:	b1 70       	andi	r27, 0x01	; 1
 c24:	6b 0f       	add	r22, r27
 c26:	71 1d       	adc	r23, r1
 c28:	81 1d       	adc	r24, r1
 c2a:	20 f4       	brcc	.+8      	; 0xc34 <round+0x3c>
 c2c:	87 95       	ror	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	93 95       	inc	r25
 c34:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__fp_mintl>
 c38:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_mpack>
 c3c:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_szero>

00000c40 <__fp_mintl>:
 c40:	88 23       	and	r24, r24
 c42:	71 f4       	brne	.+28     	; 0xc60 <__fp_mintl+0x20>
 c44:	77 23       	and	r23, r23
 c46:	21 f0       	breq	.+8      	; 0xc50 <__fp_mintl+0x10>
 c48:	98 50       	subi	r25, 0x08	; 8
 c4a:	87 2b       	or	r24, r23
 c4c:	76 2f       	mov	r23, r22
 c4e:	07 c0       	rjmp	.+14     	; 0xc5e <__fp_mintl+0x1e>
 c50:	66 23       	and	r22, r22
 c52:	11 f4       	brne	.+4      	; 0xc58 <__fp_mintl+0x18>
 c54:	99 27       	eor	r25, r25
 c56:	0d c0       	rjmp	.+26     	; 0xc72 <__fp_mintl+0x32>
 c58:	90 51       	subi	r25, 0x10	; 16
 c5a:	86 2b       	or	r24, r22
 c5c:	70 e0       	ldi	r23, 0x00	; 0
 c5e:	60 e0       	ldi	r22, 0x00	; 0
 c60:	2a f0       	brmi	.+10     	; 0xc6c <__fp_mintl+0x2c>
 c62:	9a 95       	dec	r25
 c64:	66 0f       	add	r22, r22
 c66:	77 1f       	adc	r23, r23
 c68:	88 1f       	adc	r24, r24
 c6a:	da f7       	brpl	.-10     	; 0xc62 <__fp_mintl+0x22>
 c6c:	88 0f       	add	r24, r24
 c6e:	96 95       	lsr	r25
 c70:	87 95       	ror	r24
 c72:	97 f9       	bld	r25, 7
 c74:	08 95       	ret

00000c76 <__fp_mpack>:
 c76:	9f 3f       	cpi	r25, 0xFF	; 255
 c78:	31 f0       	breq	.+12     	; 0xc86 <__fp_mpack_finite+0xc>

00000c7a <__fp_mpack_finite>:
 c7a:	91 50       	subi	r25, 0x01	; 1
 c7c:	20 f4       	brcc	.+8      	; 0xc86 <__fp_mpack_finite+0xc>
 c7e:	87 95       	ror	r24
 c80:	77 95       	ror	r23
 c82:	67 95       	ror	r22
 c84:	b7 95       	ror	r27
 c86:	88 0f       	add	r24, r24
 c88:	91 1d       	adc	r25, r1
 c8a:	96 95       	lsr	r25
 c8c:	87 95       	ror	r24
 c8e:	97 f9       	bld	r25, 7
 c90:	08 95       	ret

00000c92 <__udivmodsi4>:
 c92:	a1 e2       	ldi	r26, 0x21	; 33
 c94:	1a 2e       	mov	r1, r26
 c96:	aa 1b       	sub	r26, r26
 c98:	bb 1b       	sub	r27, r27
 c9a:	fd 01       	movw	r30, r26
 c9c:	0d c0       	rjmp	.+26     	; 0xcb8 <__udivmodsi4_ep>

00000c9e <__udivmodsi4_loop>:
 c9e:	aa 1f       	adc	r26, r26
 ca0:	bb 1f       	adc	r27, r27
 ca2:	ee 1f       	adc	r30, r30
 ca4:	ff 1f       	adc	r31, r31
 ca6:	a2 17       	cp	r26, r18
 ca8:	b3 07       	cpc	r27, r19
 caa:	e4 07       	cpc	r30, r20
 cac:	f5 07       	cpc	r31, r21
 cae:	20 f0       	brcs	.+8      	; 0xcb8 <__udivmodsi4_ep>
 cb0:	a2 1b       	sub	r26, r18
 cb2:	b3 0b       	sbc	r27, r19
 cb4:	e4 0b       	sbc	r30, r20
 cb6:	f5 0b       	sbc	r31, r21

00000cb8 <__udivmodsi4_ep>:
 cb8:	66 1f       	adc	r22, r22
 cba:	77 1f       	adc	r23, r23
 cbc:	88 1f       	adc	r24, r24
 cbe:	99 1f       	adc	r25, r25
 cc0:	1a 94       	dec	r1
 cc2:	69 f7       	brne	.-38     	; 0xc9e <__udivmodsi4_loop>
 cc4:	60 95       	com	r22
 cc6:	70 95       	com	r23
 cc8:	80 95       	com	r24
 cca:	90 95       	com	r25
 ccc:	9b 01       	movw	r18, r22
 cce:	ac 01       	movw	r20, r24
 cd0:	bd 01       	movw	r22, r26
 cd2:	cf 01       	movw	r24, r30
 cd4:	08 95       	ret

00000cd6 <__tablejump2__>:
 cd6:	ee 0f       	add	r30, r30
 cd8:	ff 1f       	adc	r31, r31
 cda:	05 90       	lpm	r0, Z+
 cdc:	f4 91       	lpm	r31, Z
 cde:	e0 2d       	mov	r30, r0
 ce0:	09 94       	ijmp

00000ce2 <__do_global_dtors>:
 ce2:	10 e0       	ldi	r17, 0x00	; 0
 ce4:	cb e5       	ldi	r28, 0x5B	; 91
 ce6:	d0 e0       	ldi	r29, 0x00	; 0
 ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <__do_global_dtors+0x10>
 cea:	fe 01       	movw	r30, r28
 cec:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__tablejump2__>
 cf0:	21 96       	adiw	r28, 0x01	; 1
 cf2:	cc 35       	cpi	r28, 0x5C	; 92
 cf4:	d1 07       	cpc	r29, r17
 cf6:	c9 f7       	brne	.-14     	; 0xcea <__do_global_dtors+0x8>
 cf8:	f8 94       	cli

00000cfa <__stop_program>:
 cfa:	ff cf       	rjmp	.-2      	; 0xcfa <__stop_program>
